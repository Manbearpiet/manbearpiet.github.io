<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Assigning Azure Policies on Azure and DevOops</title>
    <link>https://manbearpiet.github.io/tags/assigning-azure-policies/</link>
    <description>Recent content in Assigning Azure Policies on Azure and DevOops</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Christian Piet (CC BY 4.0)</copyright>
    <lastBuildDate>Wed, 25 Aug 2021 08:07:31 +0100</lastBuildDate>
    <atom:link href="https://manbearpiet.github.io/tags/assigning-azure-policies/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using Azure Policy to configure your resources</title>
      <link>https://manbearpiet.github.io/posts/applying-guest-configuration-policy/</link>
      <pubDate>Wed, 25 Aug 2021 08:07:31 +0100</pubDate>
      <guid>https://manbearpiet.github.io/posts/applying-guest-configuration-policy/</guid>
      <description>&lt;h1 id=&#34;azure-policy-as-a-configuration-engine&#34;&gt;Azure Policy as a configuration engine?&lt;/h1&gt;&#xA;&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://manbearpiet.github.io/images/applying-guest-config/feature.png&#34;&#xA;    alt=&#34;Azure Policy&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;br&gt;&#xA; &lt;/p&gt;&#xA;&lt;h2 id=&#34;azure-policy-guest-configuration&#34;&gt;Azure Policy Guest Configuration&lt;/h2&gt;&#xA;&lt;p&gt;In a previous blog, I showed how to audit your GPO-contained settings&#xA;inside Azure VM&amp;rsquo;s using Azure Policy Guest Configuration. The packaging process&#xA;is a bit too much for some, and in some cases, you only need to perform a few&#xA;configuration settings. Luckily there are some settings you can already&#xA;configure with built-in policies. In this blog, I will show you what Azure&#xA;Policies are and how they are assigned. When you&amp;rsquo;ve read this post, you&amp;rsquo;ll be&#xA;able to assign Azure Policies to configure the state in your Azure environment and&#xA;your Virtual Machines.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h1 id="azure-policy-as-a-configuration-engine">Azure Policy as a configuration engine?</h1>
<p><figure><img src="/images/applying-guest-config/feature.png"
    alt="Azure Policy">
</figure>
<br>
 </p>
<h2 id="azure-policy-guest-configuration">Azure Policy Guest Configuration</h2>
<p>In a previous blog, I showed how to audit your GPO-contained settings
inside Azure VM&rsquo;s using Azure Policy Guest Configuration. The packaging process
is a bit too much for some, and in some cases, you only need to perform a few
configuration settings. Luckily there are some settings you can already
configure with built-in policies. In this blog, I will show you what Azure
Policies are and how they are assigned. When you&rsquo;ve read this post, you&rsquo;ll be
able to assign Azure Policies to configure the state in your Azure environment and
your Virtual Machines.</p>
<h2 id="assigning-policies-and-policy-initiatives">Assigning policies and policy initiatives</h2>
<h3 id="azure-policy">Azure Policy</h3>
<p>As a recap, Azure Policy is a service Microsoft offers to audit, configure,
and enforce the configuration of Azure resources to govern the state of your
Azure environment. You could say that they are the embodiment of the
&lsquo;desired state&rsquo; of your Azure resources. Azure Policies are defined within the
policy definitions. A policy definition (JSON) defines which resource types and
properties to check for and what effects are supported by
that policy.</p>
<p>Policy effects are operations, which are triggered if the Policy rules have
been violated. Policies can be identified by their unique &lsquo;policy
definition id&rsquo;. More information about Azure Policies can be found on <a href="https://docs.microsoft.com/en-us/azure/governance/policy/overview#overview">Microsoft Docs</a>.</p>
<p>Policy definitions are assigned to resources scopes (resourcegroup(s),
subscriptions or management groups). This assignment has a distinct name and a
policy effect is chosen. For example, when assigning an Azure
Policy which evaluates if Azure Key Vaults have soft-delete in place, you can
choose the action in that assignment to be <code>Deny</code>. This will deny new
resource deployments in the scope the policy is assigned to.</p>
<p>Some policy definitions allow for several effects, such as &ldquo;Audit&rdquo; or &ldquo;Deny&rdquo;.
During the assignment of the policy, you can supply what policy effect you want
executed in case the policy is violated. More information about Azure Policy effects can be
found at <a href="https://docs.microsoft.com/en-us/azure/governance/policy/concepts/effects">Microsoft Docs</a>.</p>
<h3 id="azure-policy-definition-id">Azure Policy Definition ID</h3>
<p>As mentioned earlier, policy definitions are referenced by their id. You can
search for policy- and initiative definitions, using their ID or display name on the Azure Portal.</p>
<figure><img src="/images/applying-guest-config/searchdefinition.png"
    alt="Search Azure Policy Definitions">
</figure>

<p>Azure <strong>built-in</strong> policies can be referenced at each level with the same id
(subscription and Management Group), so the definition id will always be the
same.</p>
<p>Be wary if you&rsquo;re creating <strong>custom policies</strong> and initiatives. These
are stored at the object and level you create them. So if you&rsquo;ve created a
custom policy definition at a Management Group scope, you can apply that to
that MG or resources scopes beneath the MG, but not in other scopes (not
contained beneath that MG).</p>
<p><figure><img src="/images/applying-guest-config/assignment.png"
    alt="Azure Policy Assignment">
</figure>
<br>
 </p>
<p>Another gotcha from the custom policies is that their policy definition id&rsquo;s
differ from built-in policy definitions. The policy definition id of a custom
policy has a reference to the resource scope where the policy definition is stored.</p>
<p>Built in policy definition id&rsquo;s look like this:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="ln">1</span><span class="cl">/providers/Microsoft.Authorization/policyDefinitions/6141c932-9384-44c6-a395-59e4c057d7c9</span></span></code></pre></div><p>vs. custom policy definitions id&rsquo;s</p>
<p>Custom policy definition (id) stored in a Management group:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="ln">1</span><span class="cl">/providers/Microsoft.Management/managementGroups/MGNAME/providers/Microsoft.Authorization/policyDefinitions/0d030380-eff5-415c-8ea0-b4bb4af4bd20</span></span></code></pre></div><p>Custom policy definition (id) stored in a subscription:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="ln">1</span><span class="cl">/subscriptions/0192d01f-1632-4c36-a89e-807d825b5017/providers/Microsoft.Authorization/policyDefinitions/15f09619-2135-47c9-8af6-1f6a271b8f0d</span></span></code></pre></div><p>Azure Policy Initiatives have a similar definition id, but just a small
difference (policySetDefinitions instead of policyDefinitions):</p>
<p>Built-in:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="ln">1</span><span class="cl">/providers/Microsoft.Authorization/policySetDefinitions/75714362-cae7-409e-9b99-a8e5075b7fad</span></span></code></pre></div><p>vs. custom</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="ln">1</span><span class="cl">/providers/Microsoft.Management/managementGroups/MGNAME/providers/Microsoft.Authorization/policySetDefinitions/84317eb8115a47af90ab703c</span></span></code></pre></div><h2 id="assigning-azure-policies">Assigning Azure Policies</h2>
<p>While Azure Policy Definitions are a tool to reach a state, the policy requires
a target resource scope to be applied. The Azure Policy assignment is a
configuration item which contains the following:</p>
<ul>
<li>What resource scope should the policy apply to</li>
<li>What exclusions should there be within the assigned scope</li>
<li>What policy is assigned</li>
<li>What is the name of the assignment</li>
<li>Should the policy be Enforced</li>
<li>Who assigned the policy</li>
<li>Parameter data for policies with parameters</li>
<li>Which Azure Region the Managed Identity should be deployed in (if using DINE/modify
policy effects)</li>
<li>What default text string to display when a resource is not compliant or if a
resource deployment is not compliant.</li>
</ul>
<p>There are multiple methods to assign policies to Azure resource scopes. In my
previous blog I showed how to assign policies using the Azure Portal. I like
using PowerShell, so I&rsquo;ll use that. More methods to assign Azure Policies can be
found on the <a href="https://docs.microsoft.com/en-us/azure/governance/policy/">Microsoft Docs</a> at the Quickstarts tab.</p>
<p>To make it extra interesting, let&rsquo;s configure objects we can&rsquo;t edit in the
Azure portal. For example, settings in a virtual machine OS.</p>
<h3 id="prerequisites">Prerequisites</h3>
<p>We do need to setup a few things before we can configure Azure Policy to make
changes to our VM&rsquo;s.</p>
<p>In your subscription(s):</p>
<ul>
<li>Must have registered the Guest Configuration Resource provider
<ul>
<li>You can do so with PowerShell using:
<ul>
<li><code>Register-AzResourceProvider -ProviderNamespace Microsoft.GuestConfiguration</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<p>On your VM resources:</p>
<ul>
<li>You must have the <strong>Azure Policy Guest Extension</strong> present on your VM&rsquo;s
<ul>
<li>Can be deployed with an initiative definition:
<ul>
<li><code>/providers/Microsoft.Authorization/policySetDefinitions/12794019-7a00-42cf-95c2-882eed337cc8</code></li>
</ul>
</li>
</ul>
</li>
<li>Have a <strong>System assigned Managed Identity</strong> for your VM
<ul>
<li>The same initiative can be used mentioned above</li>
</ul>
</li>
<li>VM must be a <a href="https://docs.microsoft.com/en-us/azure/governance/policy/concepts/guest-configuration#supported-client-types">supported client</a></li>
<li>Allow outbound traffic on TCP 443 to NSG-tags <code>AzureArcInfrastructure</code> and
<code>Storage</code> or use Private Link</li>
</ul>
<p>Having met all these requirements, we&rsquo;re all set to deploy built-in GC policies.
Documentation for the built-in GC policies is available at <a href="https://docs.microsoft.com/en-us/azure/governance/policy/samples/built-in-policies#guest-configuration">Microsoft Docs</a>.
There&rsquo;s also a built-in <a href="https://docs.microsoft.com/en-us/azure/governance/policy/samples/built-in-initiatives#guest-configuration">policy initiative</a>.</p>
<h2 id="assigning-policies">Assigning policies</h2>
<p>To show the concept, I&rsquo;m using the
<code>Audit Windows machines that are not set to the specified time zone.</code> built-in
Azure Guest Configuration Policy. It&rsquo;s policy definition ID is:
<code>/providers/Microsoft.Authorization/policyDefinitions/4221adbc-5c0f-474f-88b7-037a99e6114c</code>.
In the <a href="https://github.com/Azure/azure-policy/blob/master/built-in-policies/policyDefinitions/Guest%20Configuration/GuestConfiguration_WindowsTimeZone_AINE.json">policy definition</a> the policy parameter timeZone is referenced, but it has no defaultValue. So we&rsquo;re required to supply the parameter when assigning this policy. Assigning the policy will create another unique ID, containing the scope of the assignment and the assignment name (<code>{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}</code>).</p>
<h3 id="audit">Audit</h3>
<p>We start with an Azure Policy that audits the setting on the machine. We&rsquo;ll perform the policy assignment with:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="nv">$DefinitionId</span> <span class="p">=</span> <span class="s2">&#34;/providers/Microsoft.Authorization/policyDefinitions/c633f6a2-7f8b-4d9e-9456-02f0f04f5505&#34;</span>
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">
</span></span><span class="line"><span class="ln"> 3</span><span class="cl"><span class="nv">$splat</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">  <span class="n">Name</span> <span class="p">=</span> <span class="s1">&#39;Audit Windows machines - Timezone - Test&#39;</span>
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">  <span class="n">Scope</span> <span class="p">=</span> <span class="s2">&#34;/subscriptions/0192d01f-1632-4c36-a89e-807d825b5017&#34;</span>
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">  <span class="n">PolicyParameterObject</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">    <span class="n">timeZone</span><span class="p">=</span> <span class="s2">&#34;(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna&#34;</span>
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">  <span class="n">PolicyDefinition</span> <span class="p">=</span> <span class="nb">Get-AzPolicyDefinition</span> <span class="n">-Builtin</span> <span class="p">|</span> <span class="nb">Where-Object</span> <span class="n">PolicyDefinitionId</span> <span class="o">-eq</span> <span class="nv">$DefinitionId</span>
</span></span><span class="line"><span class="ln">10</span><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="ln">11</span><span class="cl">
</span></span><span class="line"><span class="ln">12</span><span class="cl"><span class="nb">New-AzPolicyAssignment</span> <span class="nv">@splat</span></span></span></code></pre></div><h3 id="deployifnotexists">DeployIfNotExists</h3>
<p>The policy we assigned in the previous example has <code>AuditIfNotExists</code> as a policy effect. However, we&rsquo;re interested in configuring
Windows Configuration via Azure Policies, instead of auditing.</p>
<p>Some policies can deploy resources or modify existing resources to automate the
steps towards desired state. Deploying and modifying does require a managed
identity for the Assignment, to perform the policy effects. When assigning a
policy with those effects (<code>DeployIfNotExists</code> (DINE) or <code>Modify</code>), the managed identity is assigned the RBAC-role, as defined in the policy definition under the <code>roleDefinitionIds</code>.</p>
<p>Using Azure Policy, we can now also set the timezone used on the machine. We can do so with a policy definition conveniently named: <code>Configure time zone on Windows machines</code>.
This has a roleDefinition property in the policy definition:</p>
<p><code>/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c</code></p>
<p>In the <a href="https://docs.microsoft.com/en-us/azure/role-based-access-control/built-in-roles">built-in roles reference</a> we can see that <code>b24988ac-6180-42a0-ab88-20f7382dd24c</code>, maps to Contributor resource role. The role is assigned to a special type of service principal called a managed identity <a href="https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview">(Microsoft Docs page about managed identities)</a>.</p>
<p>Assigning the policy with a DeployIfNotExists policy, with the -AssignIdentity switch will create the Identity and assign the Contributor role to the Identity. Do mind that you need the proper authorizations to perform this assignment. Otherwise the remediation actions won&rsquo;t be performed.</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="nv">$DefinitionId</span> <span class="p">=</span>  <span class="s2">&#34;/providers/Microsoft.Authorization/policyDefinitions/6141c932-9384-44c6-a395-59e4c057d7c9&#34;</span>
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">
</span></span><span class="line"><span class="ln"> 3</span><span class="cl"><span class="nv">$splat</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">  <span class="n">Name</span> <span class="p">=</span> <span class="nb">New-Guid</span>
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">  <span class="n">DisplayName</span> <span class="p">=</span> <span class="s1">&#39;Configure time zone on Windows machines - test&#39;</span>
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">  <span class="n">Scope</span> <span class="p">=</span> <span class="s2">&#34;/subscriptions/0192d01f-1632-4c36-a89e-807d825b5017&#34;</span>
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">  <span class="n">PolicyParameterObject</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">    <span class="n">timeZone</span><span class="p">=</span><span class="s2">&#34;(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna&#34;</span>
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="ln">10</span><span class="cl">  <span class="n">PolicyDefinition</span> <span class="p">=</span> <span class="nb">Get-AzPolicyDefinition</span> <span class="n">-Builtin</span> <span class="p">|</span> <span class="nb">Where-Object</span> <span class="n">PolicyDefinitionId</span> <span class="o">-eq</span> <span class="nv">$DefinitionId</span>
</span></span><span class="line"><span class="ln">11</span><span class="cl">  <span class="n">Location</span> <span class="p">=</span> <span class="s1">&#39;westeurope&#39;</span>
</span></span><span class="line"><span class="ln">12</span><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="ln">13</span><span class="cl">
</span></span><span class="line"><span class="ln">14</span><span class="cl"><span class="nb">New-AzPolicyAssignment</span> <span class="nv">@splat</span> <span class="n">-AssignIdentity</span></span></span></code></pre></div><p>After assigning the policy, the same principles apply as with the previous blogpost. Monitoring policy compliance is done with the <code>Compliance</code>-view in the <code>Policy</code>-management blade:</p>
<p><figure><img src="/images/applying-guest-config/compliance.png"
    alt="Azure Policy">
</figure>
<br>
 </p>
<p>Non-compliant resources will not be remediated until a remediation action is performed, a resource deployment is done (including a tag deployment). So don&rsquo;t forget to perform a remediation action or trigger a policy evaluation by adjusting a resource property.</p>
<p>In this case the assignment is done on an Azure Subscription. To remediate non-compliant resources of an assignment, using a remediation task, you have two options. You can remediate per-resource or remediate all the non-compliant resources for the whole assignment.</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="ln">1</span><span class="cl"><span class="nb">Start-AzPolicyRemediation</span> <span class="n">-Name</span> <span class="s2">&#34;RemediationAction&#34;</span> <span class="n">-PolicyAssignmentId</span> <span class="s2">&#34;/subscriptions/0192d01f-1632-4c36-a89e-807d825b5017/providers/Microsoft.Authorization/policyAssignments/b0b59220-dcfa-4dc2-9638-bda2133ed7b4&#34;</span></span></span></code></pre></div><p>Using the name we supplied we can view the changes in the <code>Remediation</code>-view in the <code>Policy</code>-blade. Under the <code>Remediation Tasks</code> we can see the progress of the remediation task. After a few minutes if remediation succeeded, the compliance will show that the previously non-compliant items are remediated. This can take up to 30 minutes. If remediation failed you can check the task and it&rsquo;s deployments (remediation actions use regular resource deployments to change configuration to be compliant).</p>
<h2 id="conclusion-and-next-steps">Conclusion and next steps</h2>
<p>In this blog I&rsquo;ve explained what Azure Policies definitions and assignments are. I&rsquo;ve shown the differences in assigning the policies using Azure PowerShell with the policy actions Audit and DeployIfNotExists. I also showed how you can initiate Remediate Tasks using Azure PowerShell.</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
